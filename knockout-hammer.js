// Generated by CoffeeScript 1.4.0

/*
* Knockout Hammer
* knockout (https://github.com/SteveSanderson/knockout)
* hammer.js (https://github.com/EightMedia/hammer.js)
* Usage: data-bind="hmHold: holdHandlerFn, hmOptions: { hold_timeout: 400 }"
*/


(function() {

  ['hold', 'tap', 'doubletap', 'drag', 'dragstart', 'dragend', 'dragup', 'dragdown', 'dragleft', 'dragright', 'swipe', 'swipeup', 'swipedown', 'swipeleft', 'swiperight', 'transform', 'transformstart', 'transformend', 'rotate', 'pinch', 'pinchin', 'pinchout', 'touch', 'release'].forEach(function(gesture) {
    return ko.bindingHandlers["hm" + (gesture[0].toUpperCase()) + (gesture.slice(1).toLowerCase())] = {
      init: function(element, valueAccessor, allBindingsAccessor, viewModel) {
        var hammer, handler, options;
        if (!valueAccessor()) {
          return false;
        }
        options = allBindingsAccessor().hmOptions || {};
        handler = valueAccessor().bind(viewModel);
        hammer = Hammer(element, options);
        hammer.on(gesture, handler);
        ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
          return hammer.off(gesture, handler);
        });
        return true;
      }
    };
  });

}).call(this);
